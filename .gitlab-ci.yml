variables:
  SLACK_PAYLOAD: "payload={\"channel\": \"$SLACK_CHANNEL\", \"username\": \"webhookbot\", \"text\": \"$SLACK_HOOK_TEXT\", \"icon_emoji\": \":warning:\"}"

stages:
  - prerequisite
  - tests
  - security_check
  - build

# deps_install:
#   stage: prerequisite
#   image: node:19-alpine
#   cache:
#     paths:
#       - node_modules
#   script:
#     - yarn install

npm_audit:
  image: node:19-alpine
  stage: security_check
  # dependencies:
  #   - deps_install
  script:
    - yarn audit || exit 1
  after_script:
    - echo $CI_JOB_STATUS
    - echo $SLACK_HOOK_URL
    - echo $SLACK_CHANNEL
    - echo $SLACK_HOOK_TEXT
    - echo $SLACK_PAYLOAD
    - >
      wget -O- \
      --post-data="{\"channel\": \"$SLACK_CHANNEL\", \"username\": \"webhookbot\", \"text\": \"$SLACK_HOOK_TEXT\", \"icon_emoji\": \":warning:\"}" \
      --header="Content-Type:application/json" \
      $SLACK_HOOK_URL
    - >
      if [[ $CI_JOB_STATUS != 'success' ]]; then
        echo 'Security check failed'

        if $SLACK_HOOK_URL; then
          wget -O- \
            --post-data="{\"channel\": \"$SLACK_CHANNEL\", \"username\": \"webhookbot\", \"text\": \"$SLACK_HOOK_TEXT\", \"icon_emoji\": \":warning:\"}" \
            --header='Content-Type:application/json' \
            "$SLACK_HOOK_URL"
        else
          echo "SLACK_HOOK_URL variable is not present, skipping Slack notification"
        fi
      else
        echo "Security check passed"
      fi

security_slack_notification:
  stage: security_check
  needs: ["npm_audit"]
  when: on_failure
  image: curlimages/curl
  rules:
    - if: $SLACK_HOOK_URL != null
  before_script:
    - echo $SLACK_HOOK_URL
    - echo $SLACK_CHANNEL
    - echo $SLACK_HOOK_TEXT
    - echo $SLACK_PAYLOAD
  script: curl -X POST --data-urlencode "$SLACK_PAYLOAD" "$SLACK_HOOK_URL"
  # curl -X POST --data-urlencode "payload={\"channel\": \"$SLACK_CHANNEL\", \"username\": \"webhookbot\", \"text\": \"$SLACK_HOOK_TEXT\", \"icon_emoji\": \":warning:\"}" $SLACK_HOOK_URL